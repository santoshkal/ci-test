name: Release Workflow

on:
  push:
    branches:
      - main
    paths:
      - "terraform_policies/**"
      - "dockerfile_policies/**"

permissions:
  contents: write
  pull-requests: write
  id-token: write
  packages: write

jobs:
  check-updates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        policy:
          - name: dockerfile_policies
            path: dockerfile_policies/**
            version-file: dockerfile_version.env
            artifact-name: dockerfile_policies
            output: DOCKERFILE_POLICIES
          - name: terraform_policies
            path: terraform_policies/**
            version-file: terraform_version.env
            artifact-name: terraform_policies
            output: TERRAFORM_POLICIES
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Set matrix output
        id: set-matrix-output
        run: |
          matrix=$((
            echo '${{ toJSON(matrix) }}'
          ) | jq -c .)
          echo "::set-output name=matrix::$matrix"

      - name: Path filter
        id: changes
        uses: dorny/paths-filter@v3
        with:
          base: main
          filters: |
            src:
              - '${{ matrix.policy.path }}'

      - name: setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Conditionally set tag and install genval
        if: steps.changes.outputs.src == 'true'
        run: |
          echo "tag=$(./.github/workflows/get_version.sh ./.github/versions/${{ matrix.policy.version-file }})" >> $GITHUB_ENV
            go install github.com/intelops/genval@main

      - name: Login to GitHub Container Registry
        if: steps.changes.outputs.src == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ${{ matrix.policy.name }}
        if: steps.changes.outputs.src == 'true' && env.tag != ''
        id: push_policies
        run: |
          GIT_TAG=${{ env.tag }}
          GENVAL_OUTPUT=$(genval artifact push --reqinput ${{ matrix.policy.path }} \
          --dest oci://ghcr.io/santoshkal/ci-test/artifcts/${{ matrix.policy.artifact-name }}:${GIT_TAG} \
          --annotations="authors=santoshdts")
          echo "${GENVAL_OUTPUT}"
          echo "OUTPUT=oci://ghcr.io/santoshkal/ci-test/artifcts/${{ matrix.policy.artifact-name }}:${GIT_TAG}" >> $GITHUB_ENV

      - name: Write policy URL
        if: steps.changes.outputs.src == 'true'
        uses: DamianReeves/write-file-action@master
        with:
          path: "./outputs/${{ matrix.policy.output }}.env"
          write-mode: overwrite
          contents: |
            # GitHub generated file
            # Please do not modify or delete this file
            ${{ matrix.policy.output }}=${{env.OUTPUT}}

      - name: Commit & Push
        if: steps.changes.outputs.src == 'true'
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "${{ matrix.policy.name}}-${{ github.run_number }}"
          force: true
          message: "Overwritten by GitHub Actions - ${{ github.run_number }}"
      - name: Create Pull Request
        if: steps.changes.outputs.src == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "${{ matrix.policy.name}}-${{ github.run_number }}"
          title: "Update policy URL for ${{ matrix.policy.name }}"
          body: "This pull request updates the policy URL for ${{ matrix.policy.name }}."
          base: main
